/* Jison generated parser */
var JSHCparserExp = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"start_":3,"{":4,"exp":5,"}":6,"EOF":7,"module_":8,"module":9,"modid":10,"where":11,"body":12,"(":13,"exports":14,")":15,"topdecls":16,"topdecls_nonempty":17,";":18,"topdecl":19,"decl":20,"data":21,"simpletype":22,"=":23,"constrs":24,"impdecl":25,"decls":26,"list_decl_comma_1":27,"funlhs":28,"rhs":29,"gendecl":30,"var":31,"apats":32,"infixl":33,"literal":34,"op_list_1_comma":35,"infixr":36,"infix":37,"tycon":38,"tyvars":39,"|":40,"constr":41,"con":42,"atypes":43,"atype":44,"exports_inner":45,",":46,"export":47,"qvar":48,"qtycon":49,"..":50,"list_cname_0_comma":51,"import":52,"imports":53,"hiding":54,"list_import_1_comma":55,"import_a":56,"infixexp":57,"::":58,"type":59,"infixexpLR":60,"lexp":61,"qop":62,"-":63,"if":64,"then":65,"else":66,"fexp":67,"\\":68,"->":69,"case":70,"of":71,"alts":72,"let":73,"in":74,"aexp":75,"vars":76,"alt":77,"pat":78,"list_cname_1_comma":79,"cname":80,"gcon":81,"tuple":82,"list_exp_1_comma":83,"qconid":84,"conid":85,"qvarop":86,"qconop":87,"op":88,"varop":89,"conop":90,"consym":91,"`":92,"qvarsym":93,"qvarid":94,"varsym":95,"varid":96,"tyvar":97,"qcon":98,"gconsym":99,":":100,"qconsym":101,"gtycon":102,"apptype":103,"lpat":104,"apat":105,"tuple_pat":106,"pat_list_1_comma":107,"integer":108,"$accept":0,"$end":1},
terminals_: {2:"error",4:"{",6:"}",7:"EOF",9:"module",11:"where",13:"(",15:")",18:";",21:"data",23:"=",33:"infixl",36:"infixr",37:"infix",40:"|",46:",",50:"..",52:"import",54:"hiding",58:"::",63:"-",64:"if",65:"then",66:"else",68:"\\",69:"->",70:"case",71:"of",73:"let",74:"in",84:"qconid",85:"conid",87:"qconop",91:"consym",92:"`",93:"qvarsym",94:"qvarid",95:"varsym",96:"varid",100:":",101:"qconsym",108:"integer"},
productions_: [0,[3,4],[8,4],[8,7],[8,1],[12,3],[12,0],[16,1],[17,3],[17,1],[19,1],[19,2],[19,4],[19,1],[26,2],[26,3],[26,3],[26,4],[27,3],[27,1],[20,2],[20,1],[28,2],[28,1],[29,2],[29,4],[30,3],[30,3],[30,3],[22,1],[22,2],[24,3],[24,1],[41,1],[41,2],[43,2],[43,1],[14,1],[14,2],[45,3],[45,1],[47,1],[47,2],[47,1],[47,4],[47,4],[25,2],[25,5],[25,6],[53,1],[53,2],[53,1],[53,0],[55,3],[55,1],[56,1],[56,1],[56,4],[56,4],[5,3],[5,1],[57,2],[60,3],[60,2],[60,0],[61,6],[61,1],[61,4],[61,6],[61,4],[67,1],[67,2],[76,3],[76,1],[72,3],[72,1],[77,3],[51,1],[51,0],[79,3],[79,1],[80,1],[75,1],[75,1],[75,1],[75,3],[75,1],[82,5],[83,3],[83,1],[10,1],[10,1],[62,1],[62,1],[35,3],[35,1],[88,1],[88,1],[90,1],[90,3],[86,1],[86,1],[86,3],[89,1],[89,3],[39,2],[39,1],[97,1],[38,1],[49,1],[49,1],[42,1],[42,3],[98,1],[98,1],[98,1],[81,1],[31,1],[31,3],[48,1],[48,3],[48,1],[99,1],[99,1],[44,1],[44,1],[44,3],[59,1],[59,3],[103,2],[103,1],[102,1],[78,1],[104,1],[104,2],[32,1],[32,2],[105,1],[105,1],[105,1],[105,1],[106,5],[107,3],[107,1],[34,1]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-2]; 
break;
case 2:this.$ = {name: "module", modid: $$[$0-2], body: $$[$0], pos: this._$}; 
break;
case 3:this.$ = {name: "module", modid: $$[$0-5], exports: $$[$0-3], body: $$[$0], pos: this._$}; 
break;
case 4:this.$ = {name: "module", modid: new JSHC.ModName("Main"), body: $$[$0], pos:this._$}; 
break;
case 5: 
        var imps = [], decs = [], atdecs = false;
        for (var i = 0; i < $$[$0-1].length; i++) {
            if ($$[$0-1][i].name == "impdecl" && !atdecs) {
                imps.push($$[$0-1][i]);
            } else if ($$[$0-1][i].name == "impdecl" && atdecs) {
                throw new Error("Parse error: import declaration in statement block at line " + $$[$0-1][i].pos.first_line);
            } else {
                atdecs = true;
                decs.push($$[$0-1][i]);
            }
        }
        
        // add Prelude as an import if not explicitly imported
        var prelude_imported = false;
        for(i=0 ; i<imps.length ; i++){
	    if( imps[i].modid == "Prelude" ){
	        prelude_imported = true;
	        break;
            }
        }
        if( ! prelude_imported ){
            imps.push({name: "impdecl", modid: new JSHC.ModName("Prelude")});
        }

        this.$ = {name: "body", impdecls: imps, topdecls: decs, pos:this._$}; 
break;
case 6:this.$ = {name: "body", impdecls: [], topdecls: [], pos:this._$}; 
break;
case 7: this.$ = $$[$0]; 
break;
case 8: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 9: this.$ = [$$[$0]]; 
break;
case 10:this.$ = {name: "topdecl-decl", decl: $$[$0], pos: this._$};
break;
case 11:this.$ = {name: "topdecl-data", typ: $$[$0], constrs: [], pos: this._$};
break;
case 12:this.$ = {name: "topdecl-data", typ: $$[$0-2], constrs: $$[$0], pos: this._$};
break;
case 13:this.$ = $$[$0];
break;
case 14: this.$ = []; 
break;
case 15: this.$ = $$[$0-1]; 
break;
case 16: this.$ = []; 
break;
case 17: this.$ = $$[$0-2]; 
break;
case 18: ($$[$0-2]).push($$[$0]); this.$ = $$[$0-2]; 
break;
case 19: this.$ = [$$[$0]]; 
break;
case 20:this.$ = {name: "decl-fun", lhs: $$[$0-1], rhs: $$[$0], pos:this._$};
break;
case 22:this.$ = {name: "fun-lhs", ident: $$[$0-1], args: $$[$0], pos: this._$};
break;
case 23:this.$ = {name:"fun-lhs", ident: $$[$0], args: [], pos: this._$};
break;
case 24:this.$ = $$[$0];
break;
case 25:this.$ = {name: "fun-where", exp: $$[$0-2], decls: $$[$0], pos: this._$}; 
break;
case 26: this.$ = {name: "fixity", fix: "leftfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 27: this.$ = {name: "fixity", fix: "rightfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 28: this.$ = {name: "fixity",  fix: "nonfix",num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 29:this.$ = {name: "simpletype", tycon: $$[$0], vars: [], pos: this._$};
break;
case 30:this.$ = {name: "simpletype", tycon: $$[$0-1], vars: $$[$0], pos: this._$};
break;
case 31:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 32:this.$ = [$$[$0]];
break;
case 33:this.$ = {name: "constr", dacon: $$[$0], types: [], pos: this._$};
break;
case 34:this.$ = {name: "constr", dacon: $$[$0-1], types: $$[$0], pos: this._$};
break;
case 35:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 36:this.$ = [$$[$0]];
break;
case 37:this.$ = $$[$0];
break;
case 38:this.$ = $$[$0-1];
break;
case 39:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 40:this.$ = [$$[$0]];
break;
case 41:this.$ = {name: "export-qvar", exp: $$[$0], pos: this._$};
break;
case 42:this.$ = {name: "export-module", exp: $$[$0], pos: this._$};
break;
case 43:this.$ = {name: "export-type-unspec", exp: $$[$0], pos: this._$};
break;
case 44:this.$ = {name: "export-type-all", exp: $$[$0-3], pos: this._$};
break;
case 45:this.$ = {name: "export-type-vars", exp: $$[$0-3], vars: $$[$0-1], pos: this._$};
break;
case 46:this.$ = {name: "impdecl", modid: $$[$0], pos: this._$};
break;
case 47:this.$ = {name: "impdecl", modid: $$[$0-3], hiding: false, imports: $$[$0-1], pos: this._$};
break;
case 48:this.$ = {name: "impdecl", modid: $$[$0-4], hiding: true, imports: $$[$0-1], pos: this._$};
break;
case 49:this.$ = $$[$0];
break;
case 50:this.$ = $$[$0-1];
break;
case 51:this.$ = [];
break;
case 52:this.$ = [];
break;
case 53:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 54:this.$ = [$$[$0]];
break;
case 55:this.$ = {name: "import-var", varname: $$[$0], pos: this._$};
break;
case 56:this.$ = {name: "import-tycon", tycon: $$[$0], all: false, pos: this._$};
break;
case 57:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: true, pos: this._$};
break;
case 58:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: false, list:$$[$0-1], pos: this._$};
break;
case 59:this.$ = {name:"type-signature",exp:$$[$0-2],sig:$$[$0],pos:this._$};
break;
case 60:this.$ = $$[$0];
break;
case 61:($$[$0-1]).push($$[$0]); this.$ = {name:"infixexp",exps:$$[$0-1],pos:this._$};
break;
case 62:($$[$0-2]).push($$[$0-1],$$[$0]); this.$ = $$[$0-2];
break;
case 63:($$[$0-1]).push($$[$0]);    this.$ = $$[$0];
break;
case 64:this.$ = [];
break;
case 65:this.$ = {name:"ite",e1:$$[$0-4],e2:$$[$0-2],e3:$$[$0],pos:this._$}; 
break;
case 66: this.$ = ($$[$0].length === 1) ? ($$[$0][0]) : {name:"application", exps:$$[$0],pos:this._$}; 
break;
case 67:this.$ = {name:"lambda", args: $$[$0-2], rhs: $$[$0], pos: this._$}; 
break;
case 68:this.$ = {name:"case", exp: $$[$0-4], alts: $$[$0-1], pos: this._$}; 
break;
case 69:this.$ = {name:"let", decls: $$[$0-2], exp: $$[$0], pos: this._$}; 
break;
case 70:this.$ = [$$[$0]];
break;
case 71:($$[$0-1]).push($$[$0]); this.$ = $$[$0-1];
break;
case 72:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 73:this.$ = [$$[$0]];
break;
case 74:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 75:this.$ = [$$[$0]];
break;
case 76:this.$ = {name:"alt", pat: $$[$0-2], exp: $$[$0]};
break;
case 77:this.$ = $$[$0];
break;
case 78:this.$ = [];
break;
case 79:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 80:this.$ = [$$[$0]];
break;
case 81:this.$ = $$[$0];
break;
case 82:this.$ = $$[$0];
break;
case 83:this.$ = $$[$0];
break;
case 84:this.$ = $$[$0];
break;
case 85:this.$ = $$[$0-1];
break;
case 86:this.$ = $$[$0];
break;
case 87:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple", members: $$[$0-1], pos: this._$}; 
break;
case 88:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 89:this.$ = [$$[$0]];
break;
case 90:this.$ = new JSHC.ModName($$[$0], this._$, yy.lexer.previous.qual);
break;
case 91:this.$ = new JSHC.ModName($$[$0], this._$);
break;
case 92:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 93:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 94: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 95: this.$ = [$$[$0]]; 
break;
case 96: this.$ = $$[$0]; 
break;
case 97: this.$ = $$[$0]; 
break;
case 98: this.$ = {name: "conop", id: $$[$0], pos: this._$}; 
break;
case 99: this.$ = {name: "conop-var", id: $$[$0-2], pos: this._$}; 
break;
case 100:this.$ = {name: "qvarop", id: $$[$0], pos: this._$};
break;
case 101:this.$ = $$[$0];
break;
case 102:this.$ = {name: "qvarop-var", id: $$[$0-1], pos: this._$};
break;
case 103:this.$ = {name: "varop", id: $$[$0], pos: this._$};
break;
case 104:this.$ = {name: "varop-var", id: $$[$0-1], pos: this._$};
break;
case 105:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 106:this.$ = [$$[$0]];
break;
case 107:this.$ = new JSHC.TyVar($$[$0], this._$);
break;
case 108:this.$ = new JSHC.TyCon($$[$0], this._$);
break;
case 109:this.$ = new JSHC.TyCon($$[$0], this._$, yy.lexer.previous.qual);
break;
case 110:this.$ = $$[$0];
break;
case 111:this.$ = new JSHC.DaCon($$[$0], this._$, false);
break;
case 112:this.$ = new JSHC.DaCon($$[$0-1], this._$, true);
break;
case 113:this.$ = new JSHC.DaCon($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 114:this.$ = new JSHC.DaCon($$[$01], this._$, true, yy.lexer.previous.qual);
break;
case 115:this.$ = $$[$0];
break;
case 117:this.$ = new JSHC.VarName($$[$0], this._$, false);
break;
case 118:this.$ = new JSHC.VarName($$[$0-1], this._$, true);
break;
case 119:this.$ = new JSHC.VarName($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 120:this.$ = new JSHC.VarName($$[$0-1], this._$, true, yy.lexer.previous.qual);
break;
case 121:this.$ = $$[$0];
break;
case 122:this.$ = new JSHC.DaCon($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 123:this.$ = new JSHC.DaCon($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 124:this.$ = $$[$0];
break;
case 125:this.$ = $$[$0];
break;
case 126:this.$ = $$[$0-1];
break;
case 127:this.$ = $$[$0];
break;
case 128:this.$ = new JSHC.FunType([$$[$0-2],$$[$0]],this._$);
break;
case 129:this.$ = new JSHC.AppType($$[$0-1],$$[$0],this._$);
break;
case 130:this.$ = $$[$0];
break;
case 131:this.$ = $$[$0];
break;
case 132:this.$ = $$[$0];
break;
case 133:this.$ = $$[$0];
break;
case 134:this.$ = {name: "conpat", con: $$[$0-1], pats: $$[$0]}; 
break;
case 135:this.$ = [$$[$0]];
break;
case 136:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 137:this.$ = $$[$0]; 
break;
case 138:this.$ = $$[$0]; 
break;
case 139:this.$ = $$[$0]; 
break;
case 140:this.$ = $$[$0]; 
break;
case 141:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple_pat", members: $$[$0-1], pos: this._$}; 
break;
case 142:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 143:this.$ = [$$[$0]]; 
break;
case 144:this.$ = {name: "integer-lit", value: Number($$[$0]), pos: this._$};
break;
}
},
table: [{3:1,4:[1,2]},{1:[3]},{5:3,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{6:[1,6]},{2:[2,60],6:[2,60],11:[2,60],15:[2,60],18:[2,60],46:[2,60],58:[1,7],65:[2,60],66:[2,60],71:[2,60],87:[2,60],92:[2,60],93:[2,60],95:[2,60]},{13:[1,19],31:22,34:18,42:28,48:16,61:8,63:[1,9],64:[1,10],67:11,68:[1,12],70:[1,13],73:[1,14],75:15,81:17,82:20,84:[1,26],85:[1,31],94:[1,21],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],108:[1,24]},{7:[1,32]},{13:[1,38],38:42,44:35,49:39,59:33,84:[1,41],85:[1,43],96:[1,40],97:37,102:36,103:34},{2:[2,61],6:[2,61],11:[2,61],15:[2,61],18:[2,61],46:[2,61],58:[2,61],62:44,65:[2,61],66:[2,61],71:[2,61],86:45,87:[1,46],89:48,92:[1,49],93:[1,47],95:[1,50]},{13:[2,63],63:[2,63],64:[2,63],68:[2,63],70:[2,63],73:[2,63],84:[2,63],85:[2,63],94:[2,63],96:[2,63],100:[2,63],101:[2,63],108:[2,63]},{5:51,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{2:[2,66],6:[2,66],11:[2,66],13:[1,19],15:[2,66],18:[2,66],31:22,34:18,42:28,46:[2,66],48:16,58:[2,66],65:[2,66],66:[2,66],71:[2,66],75:52,81:17,82:20,84:[1,26],85:[1,31],87:[2,66],92:[2,66],93:[2,66],94:[1,21],95:[2,66],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],108:[1,24]},{13:[1,59],31:55,32:53,34:57,42:28,81:56,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],105:54,106:58,108:[1,24]},{5:60,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{4:[1,62],26:61},{2:[2,70],6:[2,70],11:[2,70],13:[2,70],15:[2,70],18:[2,70],46:[2,70],58:[2,70],65:[2,70],66:[2,70],71:[2,70],84:[2,70],85:[2,70],87:[2,70],92:[2,70],93:[2,70],94:[2,70],95:[2,70],96:[2,70],100:[2,70],101:[2,70],108:[2,70]},{2:[2,82],6:[2,82],11:[2,82],13:[2,82],15:[2,82],18:[2,82],46:[2,82],58:[2,82],65:[2,82],66:[2,82],71:[2,82],84:[2,82],85:[2,82],87:[2,82],92:[2,82],93:[2,82],94:[2,82],95:[2,82],96:[2,82],100:[2,82],101:[2,82],108:[2,82]},{2:[2,83],6:[2,83],11:[2,83],13:[2,83],15:[2,83],18:[2,83],46:[2,83],58:[2,83],65:[2,83],66:[2,83],71:[2,83],84:[2,83],85:[2,83],87:[2,83],92:[2,83],93:[2,83],94:[2,83],95:[2,83],96:[2,83],100:[2,83],101:[2,83],108:[2,83]},{2:[2,84],6:[2,84],11:[2,84],13:[2,84],15:[2,84],18:[2,84],46:[2,84],58:[2,84],65:[2,84],66:[2,84],71:[2,84],84:[2,84],85:[2,84],87:[2,84],92:[2,84],93:[2,84],94:[2,84],95:[2,84],96:[2,84],100:[2,84],101:[2,84],108:[2,84]},{5:63,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],91:[1,66],93:[1,64],94:[2,64],95:[1,65],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{2:[2,86],6:[2,86],11:[2,86],13:[2,86],15:[2,86],18:[2,86],46:[2,86],58:[2,86],65:[2,86],66:[2,86],71:[2,86],84:[2,86],85:[2,86],87:[2,86],92:[2,86],93:[2,86],94:[2,86],95:[2,86],96:[2,86],100:[2,86],101:[2,86],108:[2,86]},{2:[2,119],6:[2,119],11:[2,119],13:[2,119],15:[2,119],18:[2,119],46:[2,119],58:[2,119],65:[2,119],66:[2,119],71:[2,119],84:[2,119],85:[2,119],87:[2,119],92:[2,119],93:[2,119],94:[2,119],95:[2,119],96:[2,119],100:[2,119],101:[2,119],108:[2,119]},{2:[2,121],6:[2,121],11:[2,121],13:[2,121],15:[2,121],18:[2,121],46:[2,121],58:[2,121],65:[2,121],66:[2,121],71:[2,121],84:[2,121],85:[2,121],87:[2,121],92:[2,121],93:[2,121],94:[2,121],95:[2,121],96:[2,121],100:[2,121],101:[2,121],108:[2,121]},{2:[2,116],6:[2,116],11:[2,116],13:[2,116],15:[2,116],18:[2,116],23:[2,116],46:[2,116],58:[2,116],65:[2,116],66:[2,116],69:[2,116],71:[2,116],84:[2,116],85:[2,116],87:[2,116],92:[2,116],93:[2,116],94:[2,116],95:[2,116],96:[2,116],100:[2,116],101:[2,116],108:[2,116]},{2:[2,144],6:[2,144],11:[2,144],13:[2,144],15:[2,144],18:[2,144],23:[2,144],46:[2,144],58:[2,144],65:[2,144],66:[2,144],69:[2,144],71:[2,144],84:[2,144],85:[2,144],87:[2,144],91:[2,144],92:[2,144],93:[2,144],94:[2,144],95:[2,144],96:[2,144],100:[2,144],101:[2,144],108:[2,144]},{2:[2,117],6:[2,117],11:[2,117],13:[2,117],15:[2,117],18:[2,117],23:[2,117],46:[2,117],58:[2,117],65:[2,117],66:[2,117],69:[2,117],71:[2,117],84:[2,117],85:[2,117],87:[2,117],92:[2,117],93:[2,117],94:[2,117],95:[2,117],96:[2,117],100:[2,117],101:[2,117],108:[2,117]},{2:[2,113],6:[2,113],11:[2,113],13:[2,113],15:[2,113],18:[2,113],23:[2,113],46:[2,113],58:[2,113],65:[2,113],66:[2,113],69:[2,113],71:[2,113],84:[2,113],85:[2,113],87:[2,113],92:[2,113],93:[2,113],94:[2,113],95:[2,113],96:[2,113],100:[2,113],101:[2,113],108:[2,113]},{2:[2,114],6:[2,114],11:[2,114],13:[2,114],15:[2,114],18:[2,114],23:[2,114],46:[2,114],58:[2,114],65:[2,114],66:[2,114],69:[2,114],71:[2,114],84:[2,114],85:[2,114],87:[2,114],92:[2,114],93:[2,114],94:[2,114],95:[2,114],96:[2,114],100:[2,114],101:[2,114],108:[2,114]},{2:[2,115],6:[2,115],11:[2,115],13:[2,115],15:[2,115],18:[2,115],23:[2,115],46:[2,115],58:[2,115],65:[2,115],66:[2,115],69:[2,115],71:[2,115],84:[2,115],85:[2,115],87:[2,115],92:[2,115],93:[2,115],94:[2,115],95:[2,115],96:[2,115],100:[2,115],101:[2,115],108:[2,115]},{2:[2,122],6:[2,122],11:[2,122],13:[2,122],15:[2,122],18:[2,122],23:[2,122],46:[2,122],58:[2,122],65:[2,122],66:[2,122],69:[2,122],71:[2,122],84:[2,122],85:[2,122],87:[2,122],92:[2,122],93:[2,122],94:[2,122],95:[2,122],96:[2,122],100:[2,122],101:[2,122],108:[2,122]},{2:[2,123],6:[2,123],11:[2,123],13:[2,123],15:[2,123],18:[2,123],23:[2,123],46:[2,123],58:[2,123],65:[2,123],66:[2,123],69:[2,123],71:[2,123],84:[2,123],85:[2,123],87:[2,123],92:[2,123],93:[2,123],94:[2,123],95:[2,123],96:[2,123],100:[2,123],101:[2,123],108:[2,123]},{2:[2,111],6:[2,111],11:[2,111],13:[2,111],15:[2,111],18:[2,111],23:[2,111],46:[2,111],58:[2,111],65:[2,111],66:[2,111],69:[2,111],71:[2,111],84:[2,111],85:[2,111],87:[2,111],92:[2,111],93:[2,111],94:[2,111],95:[2,111],96:[2,111],100:[2,111],101:[2,111],108:[2,111]},{1:[2,1]},{2:[2,59],6:[2,59],11:[2,59],15:[2,59],18:[2,59],46:[2,59],58:[2,59],65:[2,59],66:[2,59],71:[2,59],87:[2,59],92:[2,59],93:[2,59],95:[2,59]},{2:[2,127],6:[2,127],11:[2,127],13:[1,38],15:[2,127],18:[2,127],38:42,44:68,46:[2,127],49:39,58:[2,127],65:[2,127],66:[2,127],69:[1,67],71:[2,127],84:[1,41],85:[1,43],87:[2,127],92:[2,127],93:[2,127],95:[2,127],96:[1,40],97:37,102:36},{2:[2,130],6:[2,130],11:[2,130],13:[2,130],15:[2,130],18:[2,130],46:[2,130],58:[2,130],65:[2,130],66:[2,130],69:[2,130],71:[2,130],84:[2,130],85:[2,130],87:[2,130],92:[2,130],93:[2,130],95:[2,130],96:[2,130]},{2:[2,124],6:[2,124],11:[2,124],13:[2,124],15:[2,124],18:[2,124],46:[2,124],58:[2,124],65:[2,124],66:[2,124],69:[2,124],71:[2,124],84:[2,124],85:[2,124],87:[2,124],92:[2,124],93:[2,124],95:[2,124],96:[2,124]},{2:[2,125],6:[2,125],11:[2,125],13:[2,125],15:[2,125],18:[2,125],46:[2,125],58:[2,125],65:[2,125],66:[2,125],69:[2,125],71:[2,125],84:[2,125],85:[2,125],87:[2,125],92:[2,125],93:[2,125],95:[2,125],96:[2,125]},{13:[1,38],38:42,44:35,49:39,59:69,84:[1,41],85:[1,43],96:[1,40],97:37,102:36,103:34},{2:[2,131],6:[2,131],11:[2,131],13:[2,131],15:[2,131],18:[2,131],46:[2,131],58:[2,131],65:[2,131],66:[2,131],69:[2,131],71:[2,131],84:[2,131],85:[2,131],87:[2,131],92:[2,131],93:[2,131],95:[2,131],96:[2,131]},{2:[2,107],6:[2,107],11:[2,107],13:[2,107],15:[2,107],18:[2,107],46:[2,107],58:[2,107],65:[2,107],66:[2,107],69:[2,107],71:[2,107],84:[2,107],85:[2,107],87:[2,107],92:[2,107],93:[2,107],95:[2,107],96:[2,107]},{2:[2,109],6:[2,109],11:[2,109],13:[2,109],15:[2,109],18:[2,109],46:[2,109],58:[2,109],65:[2,109],66:[2,109],69:[2,109],71:[2,109],84:[2,109],85:[2,109],87:[2,109],92:[2,109],93:[2,109],95:[2,109],96:[2,109]},{2:[2,110],6:[2,110],11:[2,110],13:[2,110],15:[2,110],18:[2,110],46:[2,110],58:[2,110],65:[2,110],66:[2,110],69:[2,110],71:[2,110],84:[2,110],85:[2,110],87:[2,110],92:[2,110],93:[2,110],95:[2,110],96:[2,110]},{2:[2,108],6:[2,108],11:[2,108],13:[2,108],15:[2,108],18:[2,108],46:[2,108],58:[2,108],65:[2,108],66:[2,108],69:[2,108],71:[2,108],84:[2,108],85:[2,108],87:[2,108],92:[2,108],93:[2,108],95:[2,108],96:[2,108]},{13:[2,62],63:[2,62],64:[2,62],68:[2,62],70:[2,62],73:[2,62],84:[2,62],85:[2,62],94:[2,62],96:[2,62],100:[2,62],101:[2,62],108:[2,62]},{13:[2,92],63:[2,92],64:[2,92],68:[2,92],70:[2,92],73:[2,92],84:[2,92],85:[2,92],94:[2,92],96:[2,92],100:[2,92],101:[2,92],108:[2,92]},{13:[2,93],63:[2,93],64:[2,93],68:[2,93],70:[2,93],73:[2,93],84:[2,93],85:[2,93],94:[2,93],96:[2,93],100:[2,93],101:[2,93],108:[2,93]},{13:[2,100],63:[2,100],64:[2,100],68:[2,100],70:[2,100],73:[2,100],84:[2,100],85:[2,100],94:[2,100],96:[2,100],100:[2,100],101:[2,100],108:[2,100]},{13:[2,101],63:[2,101],64:[2,101],68:[2,101],70:[2,101],73:[2,101],84:[2,101],85:[2,101],94:[2,101],96:[2,101],100:[2,101],101:[2,101],108:[2,101]},{94:[1,70],96:[1,71]},{2:[2,103],6:[2,103],13:[2,103],18:[2,103],46:[2,103],63:[2,103],64:[2,103],68:[2,103],70:[2,103],73:[2,103],84:[2,103],85:[2,103],94:[2,103],96:[2,103],100:[2,103],101:[2,103],108:[2,103]},{65:[1,72]},{2:[2,71],6:[2,71],11:[2,71],13:[2,71],15:[2,71],18:[2,71],46:[2,71],58:[2,71],65:[2,71],66:[2,71],71:[2,71],84:[2,71],85:[2,71],87:[2,71],92:[2,71],93:[2,71],94:[2,71],95:[2,71],96:[2,71],100:[2,71],101:[2,71],108:[2,71]},{13:[1,59],31:55,34:57,42:28,69:[1,73],81:56,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],105:74,106:58,108:[1,24]},{13:[2,135],15:[2,135],23:[2,135],46:[2,135],69:[2,135],84:[2,135],85:[2,135],96:[2,135],100:[2,135],101:[2,135],108:[2,135]},{13:[2,137],15:[2,137],23:[2,137],46:[2,137],69:[2,137],84:[2,137],85:[2,137],96:[2,137],100:[2,137],101:[2,137],108:[2,137]},{13:[2,138],15:[2,138],23:[2,138],46:[2,138],69:[2,138],84:[2,138],85:[2,138],96:[2,138],100:[2,138],101:[2,138],108:[2,138]},{13:[2,139],15:[2,139],23:[2,139],46:[2,139],69:[2,139],84:[2,139],85:[2,139],96:[2,139],100:[2,139],101:[2,139],108:[2,139]},{13:[2,140],15:[2,140],23:[2,140],46:[2,140],69:[2,140],84:[2,140],85:[2,140],96:[2,140],100:[2,140],101:[2,140],108:[2,140]},{13:[1,59],31:55,34:57,42:28,78:75,81:78,84:[1,26],85:[1,31],91:[1,66],95:[1,65],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],104:76,105:77,106:58,108:[1,24]},{71:[1,79]},{74:[1,80]},{2:[1,83],6:[1,81],13:[1,91],20:84,27:82,28:85,30:86,31:87,33:[1,88],36:[1,89],37:[1,90],96:[1,25]},{15:[1,92],46:[1,93]},{15:[1,94]},{15:[1,95]},{15:[1,96]},{13:[1,38],38:42,44:35,49:39,59:97,84:[1,41],85:[1,43],96:[1,40],97:37,102:36,103:34},{2:[2,129],6:[2,129],11:[2,129],13:[2,129],15:[2,129],18:[2,129],46:[2,129],58:[2,129],65:[2,129],66:[2,129],69:[2,129],71:[2,129],84:[2,129],85:[2,129],87:[2,129],92:[2,129],93:[2,129],95:[2,129],96:[2,129]},{15:[1,98]},{92:[1,99]},{92:[1,100]},{5:101,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{5:102,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{13:[2,136],15:[2,136],23:[2,136],46:[2,136],69:[2,136],84:[2,136],85:[2,136],96:[2,136],100:[2,136],101:[2,136],108:[2,136]},{46:[1,103]},{15:[2,132],46:[2,132],69:[2,132]},{15:[2,133],46:[2,133],69:[2,133]},{13:[1,59],15:[2,138],31:55,32:104,34:57,42:28,46:[2,138],69:[2,138],81:56,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],105:54,106:58,108:[1,24]},{4:[1,105]},{5:106,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{2:[2,14],6:[2,14],18:[2,14],74:[2,14]},{2:[1,108],6:[1,107],18:[1,109]},{6:[1,110]},{2:[2,19],6:[2,19],18:[2,19]},{23:[1,112],29:111},{2:[2,21],6:[2,21],18:[2,21]},{13:[1,59],23:[2,23],31:55,32:113,34:57,42:28,81:56,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],105:54,106:58,108:[1,24]},{34:114,108:[1,24]},{34:115,108:[1,24]},{34:116,108:[1,24]},{95:[1,65]},{2:[2,85],6:[2,85],11:[2,85],13:[2,85],15:[2,85],18:[2,85],46:[2,85],58:[2,85],65:[2,85],66:[2,85],71:[2,85],84:[2,85],85:[2,85],87:[2,85],92:[2,85],93:[2,85],94:[2,85],95:[2,85],96:[2,85],100:[2,85],101:[2,85],108:[2,85]},{5:118,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],83:117,84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{2:[2,120],6:[2,120],11:[2,120],13:[2,120],15:[2,120],18:[2,120],46:[2,120],58:[2,120],65:[2,120],66:[2,120],71:[2,120],84:[2,120],85:[2,120],87:[2,120],92:[2,120],93:[2,120],94:[2,120],95:[2,120],96:[2,120],100:[2,120],101:[2,120],108:[2,120]},{2:[2,118],6:[2,118],11:[2,118],13:[2,118],15:[2,118],18:[2,118],23:[2,118],46:[2,118],58:[2,118],65:[2,118],66:[2,118],69:[2,118],71:[2,118],84:[2,118],85:[2,118],87:[2,118],92:[2,118],93:[2,118],94:[2,118],95:[2,118],96:[2,118],100:[2,118],101:[2,118],108:[2,118]},{2:[2,112],6:[2,112],11:[2,112],13:[2,112],15:[2,112],18:[2,112],23:[2,112],46:[2,112],58:[2,112],65:[2,112],66:[2,112],69:[2,112],71:[2,112],84:[2,112],85:[2,112],87:[2,112],92:[2,112],93:[2,112],94:[2,112],95:[2,112],96:[2,112],100:[2,112],101:[2,112],108:[2,112]},{2:[2,128],6:[2,128],11:[2,128],15:[2,128],18:[2,128],46:[2,128],58:[2,128],65:[2,128],66:[2,128],71:[2,128],87:[2,128],92:[2,128],93:[2,128],95:[2,128]},{2:[2,126],6:[2,126],11:[2,126],13:[2,126],15:[2,126],18:[2,126],46:[2,126],58:[2,126],65:[2,126],66:[2,126],69:[2,126],71:[2,126],84:[2,126],85:[2,126],87:[2,126],92:[2,126],93:[2,126],95:[2,126],96:[2,126]},{13:[2,102],63:[2,102],64:[2,102],68:[2,102],70:[2,102],73:[2,102],84:[2,102],85:[2,102],94:[2,102],96:[2,102],100:[2,102],101:[2,102],108:[2,102]},{2:[2,104],6:[2,104],13:[2,104],18:[2,104],46:[2,104],63:[2,104],64:[2,104],68:[2,104],70:[2,104],73:[2,104],84:[2,104],85:[2,104],94:[2,104],96:[2,104],100:[2,104],101:[2,104],108:[2,104]},{66:[1,119]},{2:[2,67],6:[2,67],11:[2,67],15:[2,67],18:[2,67],46:[2,67],58:[2,67],65:[2,67],66:[2,67],71:[2,67],87:[2,67],92:[2,67],93:[2,67],95:[2,67]},{13:[1,59],31:55,34:57,42:28,78:121,81:78,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],104:76,105:77,106:58,107:120,108:[1,24]},{13:[1,59],15:[2,134],31:55,34:57,42:28,46:[2,134],69:[2,134],81:56,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],105:74,106:58,108:[1,24]},{13:[1,59],31:55,34:57,42:28,72:122,77:123,78:124,81:78,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],104:76,105:77,106:58,108:[1,24]},{2:[2,69],6:[2,69],11:[2,69],15:[2,69],18:[2,69],46:[2,69],58:[2,69],65:[2,69],66:[2,69],71:[2,69],87:[2,69],92:[2,69],93:[2,69],95:[2,69]},{2:[2,15],6:[2,15],18:[2,15],74:[2,15]},{6:[1,125]},{13:[1,91],20:126,28:85,30:86,31:87,33:[1,88],36:[1,89],37:[1,90],96:[1,25]},{2:[2,16],6:[2,16],18:[2,16],74:[2,16]},{2:[2,20],6:[2,20],18:[2,20]},{5:127,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{13:[1,59],23:[2,22],31:55,34:57,42:28,81:56,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],105:74,106:58,108:[1,24]},{35:128,88:129,89:130,90:131,91:[1,133],92:[1,132],95:[1,50]},{35:134,88:129,89:130,90:131,91:[1,133],92:[1,132],95:[1,50]},{35:135,88:129,89:130,90:131,91:[1,133],92:[1,132],95:[1,50]},{15:[1,136],46:[1,137]},{15:[2,89],46:[2,89]},{5:138,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{15:[1,139],46:[1,140]},{15:[2,143],46:[2,143]},{6:[1,141],18:[1,142]},{6:[2,75],18:[2,75]},{69:[1,143]},{2:[2,17],6:[2,17],18:[2,17],74:[2,17]},{2:[2,18],6:[2,18],18:[2,18]},{2:[2,24],6:[2,24],11:[1,144],18:[2,24]},{2:[2,26],6:[2,26],18:[2,26],46:[1,145]},{2:[2,95],6:[2,95],18:[2,95],46:[2,95]},{2:[2,96],6:[2,96],18:[2,96],46:[2,96]},{2:[2,97],6:[2,97],18:[2,97],46:[2,97]},{85:[1,146],96:[1,71]},{2:[2,98],6:[2,98],18:[2,98],46:[2,98]},{2:[2,27],6:[2,27],18:[2,27],46:[1,145]},{2:[2,28],6:[2,28],18:[2,28],46:[1,145]},{2:[2,87],6:[2,87],11:[2,87],13:[2,87],15:[2,87],18:[2,87],46:[2,87],58:[2,87],65:[2,87],66:[2,87],71:[2,87],84:[2,87],85:[2,87],87:[2,87],92:[2,87],93:[2,87],94:[2,87],95:[2,87],96:[2,87],100:[2,87],101:[2,87],108:[2,87]},{5:147,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{2:[2,65],6:[2,65],11:[2,65],15:[2,65],18:[2,65],46:[2,65],58:[2,65],65:[2,65],66:[2,65],71:[2,65],87:[2,65],92:[2,65],93:[2,65],95:[2,65]},{13:[2,141],15:[2,141],23:[2,141],46:[2,141],69:[2,141],84:[2,141],85:[2,141],96:[2,141],100:[2,141],101:[2,141],108:[2,141]},{13:[1,59],31:55,34:57,42:28,78:148,81:78,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],104:76,105:77,106:58,108:[1,24]},{2:[2,68],6:[2,68],11:[2,68],15:[2,68],18:[2,68],46:[2,68],58:[2,68],65:[2,68],66:[2,68],71:[2,68],87:[2,68],92:[2,68],93:[2,68],95:[2,68]},{13:[1,59],31:55,34:57,42:28,77:149,78:124,81:78,84:[1,26],85:[1,31],96:[1,25],98:23,99:27,100:[1,29],101:[1,30],104:76,105:77,106:58,108:[1,24]},{5:150,13:[2,64],57:4,60:5,63:[2,64],64:[2,64],68:[2,64],70:[2,64],73:[2,64],84:[2,64],85:[2,64],94:[2,64],96:[2,64],100:[2,64],101:[2,64],108:[2,64]},{4:[1,62],26:151},{88:152,89:130,90:131,91:[1,133],92:[1,132],95:[1,50]},{92:[1,153]},{15:[2,88],46:[2,88]},{15:[2,142],46:[2,142]},{6:[2,74],18:[2,74]},{6:[2,76],18:[2,76]},{2:[2,25],6:[2,25],18:[2,25]},{2:[2,94],6:[2,94],18:[2,94],46:[2,94]},{2:[2,99],6:[2,99],18:[2,99],46:[2,99]}],
defaultActions: {32:[2,1]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    if (typeof this.lexer.yylloc == 'undefined')
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    };

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+'\nExpecting '+expected.join(', ');
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }

            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};
return parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = JSHCparserExp;
exports.parse = function () { return JSHCparserExp.parse.apply(JSHCparserExp, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    if (typeof process !== 'undefined') {
        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), "utf8");
    } else {
        var cwd = require("file").path(require("file").cwd());
        var source = cwd.join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}