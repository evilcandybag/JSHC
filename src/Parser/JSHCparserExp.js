/* Jison generated parser */
var JSHCparserExp = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"start_":3,"{":4,"exp":5,"}":6,"EOF":7,"module_":8,"module":9,"modid":10,"where":11,"body":12,"(":13,"exports":14,")":15,"topdecls":16,"topdecls_nonempty":17,";":18,"topdecl":19,"decl":20,"data":21,"simpletype":22,"=":23,"constrs":24,"impdecl":25,"decls":26,"list_decl_comma_1":27,"decl_fixity":28,"var":29,"rhs":30,"apats":31,"pat":32,"varop":33,"::":34,"type":35,",":36,"vars":37,"infixl":38,"literal":39,"op_list_1_comma":40,"infixr":41,"infix":42,"tycon":43,"tyvars":44,"|":45,"constr":46,"con":47,"atypes":48,"atype":49,"exports_inner":50,"export":51,"qvar":52,"qtycon":53,"..":54,"list_cname_0_comma":55,"import":56,"imports":57,"hiding":58,"list_import_1_comma":59,"import_a":60,"infixexp":61,"infixexpLR":62,"lexp":63,"qop":64,"-":65,"if":66,"then":67,"else":68,"fexp":69,"\\":70,"->":71,"case":72,"of":73,"alts":74,"let":75,"in":76,"aexp":77,"alt":78,"list_cname_1_comma":79,"cname":80,"gcon":81,"tuple":82,"list_exp_1_comma":83,"qconid":84,"conid":85,"qvarop":86,"qconop":87,"op":88,"conop":89,"consym":90,"`":91,"qvarsym":92,"qvarid":93,"varsym":94,"varid":95,"tyvar":96,"qcon":97,"gconsym":98,"[":99,"]":100,"list_1_comma":101,":":102,"qconsym":103,"gtycon":104,"apptype":105,"lpat":106,"apat":107,"tuple_pat":108,"pat_list_1_comma":109,"integer":110,"$accept":0,"$end":1},
terminals_: {2:"error",4:"{",6:"}",7:"EOF",9:"module",11:"where",13:"(",15:")",18:";",21:"data",23:"=",34:"::",36:",",38:"infixl",41:"infixr",42:"infix",45:"|",54:"..",56:"import",58:"hiding",65:"-",66:"if",67:"then",68:"else",70:"\\",71:"->",72:"case",73:"of",75:"let",76:"in",84:"qconid",85:"conid",87:"qconop",90:"consym",91:"`",92:"qvarsym",93:"qvarid",94:"varsym",95:"varid",99:"[",100:"]",102:":",103:"qconsym",110:"integer"},
productions_: [0,[3,4],[8,4],[8,7],[8,1],[12,3],[12,0],[16,1],[17,3],[17,1],[19,1],[19,2],[19,4],[19,1],[26,2],[26,3],[26,3],[26,4],[27,3],[27,1],[20,1],[20,2],[20,3],[20,4],[20,7],[20,3],[20,5],[30,2],[30,4],[28,3],[28,3],[28,3],[22,1],[22,2],[24,3],[24,1],[46,1],[46,2],[48,2],[48,1],[14,1],[14,2],[50,3],[50,1],[51,1],[51,2],[51,1],[51,4],[51,4],[25,2],[25,5],[25,6],[57,1],[57,2],[57,1],[57,0],[59,3],[59,1],[60,1],[60,1],[60,4],[60,4],[5,3],[5,1],[61,2],[62,3],[62,2],[62,0],[63,6],[63,1],[63,4],[63,6],[63,4],[69,1],[69,2],[37,3],[37,1],[74,3],[74,1],[78,3],[55,1],[55,0],[79,3],[79,1],[80,1],[77,1],[77,1],[77,1],[77,3],[77,1],[82,5],[83,3],[83,1],[10,1],[10,1],[64,1],[64,1],[40,3],[40,1],[88,1],[88,1],[89,1],[89,3],[86,1],[86,1],[86,3],[33,1],[33,3],[44,2],[44,1],[96,1],[43,1],[53,1],[53,1],[47,1],[47,3],[97,1],[97,1],[97,1],[81,2],[81,2],[81,3],[81,1],[101,1],[101,2],[29,1],[29,3],[52,1],[52,3],[52,1],[98,1],[98,1],[49,1],[49,1],[49,3],[35,1],[35,3],[105,2],[105,1],[104,1],[32,1],[106,1],[106,2],[31,1],[31,2],[107,1],[107,1],[107,1],[107,1],[107,3],[108,5],[109,3],[109,1],[39,1]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-2]; 
break;
case 2:this.$ = {name: "module", modid: $$[$0-2], body: $$[$0], pos: this._$}; 
break;
case 3:this.$ = {name: "module", modid: $$[$0-5], exports: $$[$0-3], body: $$[$0], pos: this._$}; 
break;
case 4:this.$ = {name: "module", modid: new JSHC.ModName("Main"), body: $$[$0], pos:this._$}; 
break;
case 5: 
        var imps = [], decs = [], atdecs = false;
        for (var i = 0; i < $$[$0-1].length; i++) {
            if ($$[$0-1][i].name == "impdecl" && !atdecs) {
                imps.push($$[$0-1][i]);
            } else if ($$[$0-1][i].name == "impdecl" && atdecs) {
                throw new Error("Parse error: import declaration in statement block at line " + $$[$0-1][i].pos.first_line);
            } else {
                atdecs = true;
                decs.push($$[$0-1][i]);
            }
        }
        
        // add Prelude as an import if not explicitly imported
        var prelude_imported = false;
        for(i=0 ; i<imps.length ; i++){
	    if( imps[i].modid == "Prelude" ){
	        prelude_imported = true;
	        break;
            }
        }
        if( ! prelude_imported ){
            imps.push({name: "impdecl", modid: new JSHC.ModName("Prelude")});
        }

        this.$ = {name: "body", impdecls: imps, topdecls: decs, pos:this._$}; 
break;
case 6:this.$ = {name: "body", impdecls: [], topdecls: [], pos:this._$}; 
break;
case 7: this.$ = $$[$0]; 
break;
case 8: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 9: this.$ = [$$[$0]]; 
break;
case 10:this.$ = {name: "topdecl-decl", decl: $$[$0], pos: this._$};
break;
case 11:this.$ = {name: "topdecl-data", typ: $$[$0], constrs: [], pos: this._$};
break;
case 12:this.$ = {name: "topdecl-data", typ: $$[$0-2], constrs: $$[$0], pos: this._$};
break;
case 13:this.$ = $$[$0];
break;
case 14: this.$ = []; 
break;
case 15: this.$ = $$[$0-1]; 
break;
case 16: this.$ = []; 
break;
case 17: this.$ = $$[$0-2]; 
break;
case 18: ($$[$0-2]).push($$[$0]); this.$ = $$[$0-2]; 
break;
case 19: this.$ = [$$[$0]]; 
break;
case 20:this.$ = $$[$0];
break;
case 21:this.$ = {name:"decl-fun", ident: $$[$0-1], args: [], rhs: $$[$0], pos: this._$};
break;
case 22:this.$ = {name:"decl-fun", ident: $$[$0-2], args: $$[$0-1], rhs: $$[$0], pos: this._$};
break;
case 23:this.$ = {name:"decl-fun", ident: $$[$0-2], args: [$$[$0-3],$$[$0-1]], rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 24:this.$ = {name:"decl-fun", ident: $$[$0-4], args: [$$[$0-5],$$[$0-3]].concat($$[$0-1]), rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 25:this.$ = {name:"type-signature",vars:[$$[$0-2]],sig:$$[$0],pos:this._$};
break;
case 26:this.$ = {name:"type-signature",vars:[$$[$0-4]].concat($$[$0-2]),sig:$$[$0],pos:this._$};
break;
case 27:this.$ = $$[$0];
break;
case 28:this.$ = {name: "fun-where", exp: $$[$0-2], decls: $$[$0], pos: this._$}; 
break;
case 29: this.$ = {name: "fixity", fix: "leftfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 30: this.$ = {name: "fixity", fix: "rightfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 31: this.$ = {name: "fixity",  fix: "nonfix",num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 32:this.$ = {name: "simpletype", tycon: $$[$0], vars: [], pos: this._$};
break;
case 33:this.$ = {name: "simpletype", tycon: $$[$0-1], vars: $$[$0], pos: this._$};
break;
case 34:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 35:this.$ = [$$[$0]];
break;
case 36:this.$ = {name: "constr", dacon: $$[$0], types: [], pos: this._$};
break;
case 37:this.$ = {name: "constr", dacon: $$[$0-1], types: $$[$0], pos: this._$};
break;
case 38:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 39:this.$ = [$$[$0]];
break;
case 40:this.$ = $$[$0];
break;
case 41:this.$ = $$[$0-1];
break;
case 42:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 43:this.$ = [$$[$0]];
break;
case 44:this.$ = {name: "export-qvar", exp: $$[$0], pos: this._$};
break;
case 45:this.$ = {name: "export-module", exp: $$[$0], pos: this._$};
break;
case 46:this.$ = {name: "export-type-unspec", exp: $$[$0], pos: this._$};
break;
case 47:this.$ = {name: "export-type-all", exp: $$[$0-3], pos: this._$};
break;
case 48:this.$ = {name: "export-type-vars", exp: $$[$0-3], vars: $$[$0-1], pos: this._$};
break;
case 49:this.$ = {name: "impdecl", modid: $$[$0], pos: this._$};
break;
case 50:this.$ = {name: "impdecl", modid: $$[$0-3], hiding: false, imports: $$[$0-1], pos: this._$};
break;
case 51:this.$ = {name: "impdecl", modid: $$[$0-4], hiding: true, imports: $$[$0-1], pos: this._$};
break;
case 52:this.$ = $$[$0];
break;
case 53:this.$ = $$[$0-1];
break;
case 54:this.$ = [];
break;
case 55:this.$ = [];
break;
case 56:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 57:this.$ = [$$[$0]];
break;
case 58:this.$ = {name: "import-var", varname: $$[$0], pos: this._$};
break;
case 59:this.$ = {name: "import-tycon", tycon: $$[$0], all: false, pos: this._$};
break;
case 60:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: true, pos: this._$};
break;
case 61:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: false, list:$$[$0-1], pos: this._$};
break;
case 62:this.$ = {name:"type-signature",exp:$$[$0-2],sig:$$[$0],pos:this._$};
break;
case 63:this.$ = $$[$0];
break;
case 64:($$[$0-1]).push($$[$0]); this.$ = {name:"infixexp",exps:$$[$0-1],pos:this._$};
break;
case 65:($$[$0-2]).push($$[$0-1],$$[$0]); this.$ = $$[$0-2];
break;
case 66:($$[$0-1]).push($$[$0]);    this.$ = $$[$0];
break;
case 67:this.$ = [];
break;
case 68:this.$ = {name:"ite",e1:$$[$0-4],e2:$$[$0-2],e3:$$[$0],pos:this._$}; 
break;
case 69: this.$ = ($$[$0].length === 1) ? ($$[$0][0]) : {name:"application", exps:$$[$0],pos:this._$}; 
break;
case 70:this.$ = {name:"lambda", args: $$[$0-2], rhs: $$[$0], pos: this._$}; 
break;
case 71:this.$ = {name:"case", exp: $$[$0-4], alts: $$[$0-1], pos: this._$}; 
break;
case 72:this.$ = {name:"let", decls: $$[$0-2], exp: $$[$0], pos: this._$}; 
break;
case 73:this.$ = [$$[$0]];
break;
case 74:($$[$0-1]).push($$[$0]); this.$ = $$[$0-1];
break;
case 75:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 76:this.$ = [$$[$0]];
break;
case 77:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 78:this.$ = [$$[$0]];
break;
case 79:this.$ = {name:"alt", pat: $$[$0-2], exp: $$[$0]};
break;
case 80:this.$ = $$[$0];
break;
case 81:this.$ = [];
break;
case 82:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 83:this.$ = [$$[$0]];
break;
case 84:this.$ = $$[$0];
break;
case 85:this.$ = $$[$0];
break;
case 86:this.$ = $$[$0];
break;
case 87:this.$ = $$[$0];
break;
case 88:this.$ = $$[$0-1];
break;
case 89:this.$ = $$[$0];
break;
case 90:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple", members: $$[$0-1], pos: this._$}; 
break;
case 91:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 92:this.$ = [$$[$0]];
break;
case 93:this.$ = new JSHC.ModName($$[$0], this._$, yy.lexer.previous.qual);
break;
case 94:this.$ = new JSHC.ModName($$[$0], this._$);
break;
case 95:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 96:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 97: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 98: this.$ = [$$[$0]]; 
break;
case 99: this.$ = $$[$0]; 
break;
case 100: this.$ = $$[$0]; 
break;
case 101: this.$ = new JSHC.DaCon($$[$0], this._$, true); 
break;
case 102: this.$ = new JSHC.DaCon($$[$0-2], this._$, false); 
break;
case 103:this.$ = new JSHC.VarName($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 104:this.$ = $$[$0];
break;
case 105:this.$ = new JSHC.VarName($$[$0-2], this._$, false, yy.lexer.previous.qual);
break;
case 106:this.$ = new JSHC.VarName($$[$0], this._$, true);
break;
case 107:this.$ = new JSHC.VarName($$[$0-2], this._$, false)
break;
case 108:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 109:this.$ = [$$[$0]];
break;
case 110:this.$ = new JSHC.TyVar($$[$0], this._$);
break;
case 111:this.$ = new JSHC.TyCon($$[$0], this._$);
break;
case 112:this.$ = new JSHC.TyCon($$[$0], this._$, yy.lexer.previous.qual);
break;
case 113:this.$ = $$[$0];
break;
case 114:this.$ = new JSHC.DaCon($$[$0], this._$, false);
break;
case 115:this.$ = new JSHC.DaCon($$[$0-1], this._$, true);
break;
case 116:this.$ = new JSHC.DaCon($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 117:this.$ = new JSHC.DaCon($$[$01], this._$, true, yy.lexer.previous.qual);
break;
case 118:this.$ = $$[$0];
break;
case 119:this.$ = JSHC.UnitDaCon(this._$);
break;
case 120:this.$ = JSHC.ListDaCon(this._$);
break;
case 121:this.$ = JSHC.TupleDaCon($$[$0-1] + 1, this._$);
break;
case 122:this.$ = $$[$0];
break;
case 123:this.$ = 1;
break;
case 124:this.$ = $$[$0-1] + 1;
break;
case 125:this.$ = new JSHC.VarName($$[$0], this._$, false);
break;
case 126:this.$ = new JSHC.VarName($$[$0-1], this._$, true);
break;
case 127:this.$ = new JSHC.VarName($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 128:this.$ = new JSHC.VarName($$[$0-1], this._$, true, yy.lexer.previous.qual);
break;
case 129:this.$ = $$[$0];
break;
case 130:this.$ = new JSHC.DaCon($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 131:this.$ = new JSHC.DaCon($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 132:this.$ = $$[$0];
break;
case 133:this.$ = $$[$0];
break;
case 134:this.$ = $$[$0-1];
break;
case 135:this.$ = $$[$0];
break;
case 136:this.$ = new JSHC.FunType([$$[$0-2],$$[$0]],this._$);
break;
case 137:this.$ = new JSHC.AppType($$[$0-1],$$[$0],this._$);
break;
case 138:this.$ = $$[$0];
break;
case 139:this.$ = $$[$0];
break;
case 140:this.$ = $$[$0];
break;
case 141:this.$ = $$[$0];
break;
case 142:this.$ = {name: "conpat", con: $$[$0-1], pats: $$[$0]}; 
break;
case 143:this.$ = [$$[$0]];
break;
case 144:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 145:this.$ = $$[$0]; 
break;
case 146:this.$ = $$[$0]; 
break;
case 147:this.$ = $$[$0]; 
break;
case 148:this.$ = $$[$0]; 
break;
case 149:this.$ = $$[$0-1]; 
break;
case 150:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple_pat", members: $$[$0-1], pos: this._$}; 
break;
case 151:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 152:this.$ = [$$[$0]]; 
break;
case 153:this.$ = {name: "integer-lit", value: Number($$[$0]), pos: this._$};
break;
}
},
table: [{3:1,4:[1,2]},{1:[3]},{5:3,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{6:[1,6]},{2:[2,63],6:[2,63],11:[2,63],15:[2,63],18:[2,63],34:[1,7],36:[2,63],67:[2,63],68:[2,63],73:[2,63],87:[2,63],91:[2,63],92:[2,63],94:[2,63]},{13:[1,19],29:22,39:18,47:29,52:16,63:8,65:[1,9],66:[1,10],69:11,70:[1,12],72:[1,13],75:[1,14],77:15,81:17,82:20,84:[1,27],85:[1,32],93:[1,21],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],110:[1,25]},{7:[1,33]},{13:[1,39],35:34,43:43,49:36,53:40,84:[1,42],85:[1,44],95:[1,41],96:38,104:37,105:35},{2:[2,64],6:[2,64],11:[2,64],15:[2,64],18:[2,64],33:49,34:[2,64],36:[2,64],64:45,67:[2,64],68:[2,64],73:[2,64],86:46,87:[1,47],91:[1,50],92:[1,48],94:[1,51]},{13:[2,66],65:[2,66],66:[2,66],70:[2,66],72:[2,66],75:[2,66],84:[2,66],85:[2,66],93:[2,66],95:[2,66],99:[2,66],102:[2,66],103:[2,66],110:[2,66]},{5:52,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{2:[2,69],6:[2,69],11:[2,69],13:[1,19],15:[2,69],18:[2,69],29:22,34:[2,69],36:[2,69],39:18,47:29,52:16,67:[2,69],68:[2,69],73:[2,69],77:53,81:17,82:20,84:[1,27],85:[1,32],87:[2,69],91:[2,69],92:[2,69],93:[1,21],94:[2,69],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],110:[1,25]},{13:[1,60],29:56,31:54,39:58,47:29,81:57,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],107:55,108:59,110:[1,25]},{5:61,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{4:[1,63],26:62},{2:[2,73],6:[2,73],11:[2,73],13:[2,73],15:[2,73],18:[2,73],34:[2,73],36:[2,73],67:[2,73],68:[2,73],73:[2,73],84:[2,73],85:[2,73],87:[2,73],91:[2,73],92:[2,73],93:[2,73],94:[2,73],95:[2,73],99:[2,73],102:[2,73],103:[2,73],110:[2,73]},{2:[2,85],6:[2,85],11:[2,85],13:[2,85],15:[2,85],18:[2,85],34:[2,85],36:[2,85],67:[2,85],68:[2,85],73:[2,85],84:[2,85],85:[2,85],87:[2,85],91:[2,85],92:[2,85],93:[2,85],94:[2,85],95:[2,85],99:[2,85],102:[2,85],103:[2,85],110:[2,85]},{2:[2,86],6:[2,86],11:[2,86],13:[2,86],15:[2,86],18:[2,86],34:[2,86],36:[2,86],67:[2,86],68:[2,86],73:[2,86],84:[2,86],85:[2,86],87:[2,86],91:[2,86],92:[2,86],93:[2,86],94:[2,86],95:[2,86],99:[2,86],102:[2,86],103:[2,86],110:[2,86]},{2:[2,87],6:[2,87],11:[2,87],13:[2,87],15:[2,87],18:[2,87],34:[2,87],36:[2,87],67:[2,87],68:[2,87],73:[2,87],84:[2,87],85:[2,87],87:[2,87],91:[2,87],92:[2,87],93:[2,87],94:[2,87],95:[2,87],99:[2,87],102:[2,87],103:[2,87],110:[2,87]},{5:64,13:[2,67],15:[1,66],36:[1,70],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],90:[1,69],92:[1,65],93:[2,67],94:[1,68],95:[2,67],99:[2,67],101:67,102:[2,67],103:[2,67],110:[2,67]},{2:[2,89],6:[2,89],11:[2,89],13:[2,89],15:[2,89],18:[2,89],34:[2,89],36:[2,89],67:[2,89],68:[2,89],73:[2,89],84:[2,89],85:[2,89],87:[2,89],91:[2,89],92:[2,89],93:[2,89],94:[2,89],95:[2,89],99:[2,89],102:[2,89],103:[2,89],110:[2,89]},{2:[2,127],6:[2,127],11:[2,127],13:[2,127],15:[2,127],18:[2,127],34:[2,127],36:[2,127],67:[2,127],68:[2,127],73:[2,127],84:[2,127],85:[2,127],87:[2,127],91:[2,127],92:[2,127],93:[2,127],94:[2,127],95:[2,127],99:[2,127],102:[2,127],103:[2,127],110:[2,127]},{2:[2,129],6:[2,129],11:[2,129],13:[2,129],15:[2,129],18:[2,129],34:[2,129],36:[2,129],67:[2,129],68:[2,129],73:[2,129],84:[2,129],85:[2,129],87:[2,129],91:[2,129],92:[2,129],93:[2,129],94:[2,129],95:[2,129],99:[2,129],102:[2,129],103:[2,129],110:[2,129]},{100:[1,71]},{2:[2,122],6:[2,122],11:[2,122],13:[2,122],15:[2,122],18:[2,122],23:[2,122],34:[2,122],36:[2,122],67:[2,122],68:[2,122],71:[2,122],73:[2,122],84:[2,122],85:[2,122],87:[2,122],91:[2,122],92:[2,122],93:[2,122],94:[2,122],95:[2,122],99:[2,122],102:[2,122],103:[2,122],110:[2,122]},{2:[2,153],6:[2,153],11:[2,153],13:[2,153],15:[2,153],18:[2,153],23:[2,153],34:[2,153],36:[2,153],67:[2,153],68:[2,153],71:[2,153],73:[2,153],84:[2,153],85:[2,153],87:[2,153],90:[2,153],91:[2,153],92:[2,153],93:[2,153],94:[2,153],95:[2,153],99:[2,153],102:[2,153],103:[2,153],110:[2,153]},{2:[2,125],6:[2,125],11:[2,125],13:[2,125],15:[2,125],18:[2,125],23:[2,125],34:[2,125],36:[2,125],67:[2,125],68:[2,125],71:[2,125],73:[2,125],84:[2,125],85:[2,125],87:[2,125],91:[2,125],92:[2,125],93:[2,125],94:[2,125],95:[2,125],99:[2,125],102:[2,125],103:[2,125],110:[2,125]},{2:[2,116],6:[2,116],11:[2,116],13:[2,116],15:[2,116],18:[2,116],23:[2,116],34:[2,116],36:[2,116],67:[2,116],68:[2,116],71:[2,116],73:[2,116],84:[2,116],85:[2,116],87:[2,116],91:[2,116],92:[2,116],93:[2,116],94:[2,116],95:[2,116],99:[2,116],102:[2,116],103:[2,116],110:[2,116]},{2:[2,117],6:[2,117],11:[2,117],13:[2,117],15:[2,117],18:[2,117],23:[2,117],34:[2,117],36:[2,117],67:[2,117],68:[2,117],71:[2,117],73:[2,117],84:[2,117],85:[2,117],87:[2,117],91:[2,117],92:[2,117],93:[2,117],94:[2,117],95:[2,117],99:[2,117],102:[2,117],103:[2,117],110:[2,117]},{2:[2,118],6:[2,118],11:[2,118],13:[2,118],15:[2,118],18:[2,118],23:[2,118],34:[2,118],36:[2,118],67:[2,118],68:[2,118],71:[2,118],73:[2,118],84:[2,118],85:[2,118],87:[2,118],91:[2,118],92:[2,118],93:[2,118],94:[2,118],95:[2,118],99:[2,118],102:[2,118],103:[2,118],110:[2,118]},{2:[2,130],6:[2,130],11:[2,130],13:[2,130],15:[2,130],18:[2,130],23:[2,130],34:[2,130],36:[2,130],67:[2,130],68:[2,130],71:[2,130],73:[2,130],84:[2,130],85:[2,130],87:[2,130],91:[2,130],92:[2,130],93:[2,130],94:[2,130],95:[2,130],99:[2,130],102:[2,130],103:[2,130],110:[2,130]},{2:[2,131],6:[2,131],11:[2,131],13:[2,131],15:[2,131],18:[2,131],23:[2,131],34:[2,131],36:[2,131],67:[2,131],68:[2,131],71:[2,131],73:[2,131],84:[2,131],85:[2,131],87:[2,131],91:[2,131],92:[2,131],93:[2,131],94:[2,131],95:[2,131],99:[2,131],102:[2,131],103:[2,131],110:[2,131]},{2:[2,114],6:[2,114],11:[2,114],13:[2,114],15:[2,114],18:[2,114],23:[2,114],34:[2,114],36:[2,114],67:[2,114],68:[2,114],71:[2,114],73:[2,114],84:[2,114],85:[2,114],87:[2,114],91:[2,114],92:[2,114],93:[2,114],94:[2,114],95:[2,114],99:[2,114],102:[2,114],103:[2,114],110:[2,114]},{1:[2,1]},{2:[2,62],6:[2,62],11:[2,62],15:[2,62],18:[2,62],34:[2,62],36:[2,62],67:[2,62],68:[2,62],73:[2,62],87:[2,62],91:[2,62],92:[2,62],94:[2,62]},{2:[2,135],6:[2,135],11:[2,135],13:[1,39],15:[2,135],18:[2,135],34:[2,135],36:[2,135],43:43,49:73,53:40,67:[2,135],68:[2,135],71:[1,72],73:[2,135],84:[1,42],85:[1,44],87:[2,135],91:[2,135],92:[2,135],94:[2,135],95:[1,41],96:38,104:37},{2:[2,138],6:[2,138],11:[2,138],13:[2,138],15:[2,138],18:[2,138],34:[2,138],36:[2,138],67:[2,138],68:[2,138],71:[2,138],73:[2,138],84:[2,138],85:[2,138],87:[2,138],91:[2,138],92:[2,138],94:[2,138],95:[2,138]},{2:[2,132],6:[2,132],11:[2,132],13:[2,132],15:[2,132],18:[2,132],34:[2,132],36:[2,132],67:[2,132],68:[2,132],71:[2,132],73:[2,132],84:[2,132],85:[2,132],87:[2,132],91:[2,132],92:[2,132],94:[2,132],95:[2,132]},{2:[2,133],6:[2,133],11:[2,133],13:[2,133],15:[2,133],18:[2,133],34:[2,133],36:[2,133],67:[2,133],68:[2,133],71:[2,133],73:[2,133],84:[2,133],85:[2,133],87:[2,133],91:[2,133],92:[2,133],94:[2,133],95:[2,133]},{13:[1,39],35:74,43:43,49:36,53:40,84:[1,42],85:[1,44],95:[1,41],96:38,104:37,105:35},{2:[2,139],6:[2,139],11:[2,139],13:[2,139],15:[2,139],18:[2,139],34:[2,139],36:[2,139],67:[2,139],68:[2,139],71:[2,139],73:[2,139],84:[2,139],85:[2,139],87:[2,139],91:[2,139],92:[2,139],94:[2,139],95:[2,139]},{2:[2,110],6:[2,110],11:[2,110],13:[2,110],15:[2,110],18:[2,110],34:[2,110],36:[2,110],67:[2,110],68:[2,110],71:[2,110],73:[2,110],84:[2,110],85:[2,110],87:[2,110],91:[2,110],92:[2,110],94:[2,110],95:[2,110]},{2:[2,112],6:[2,112],11:[2,112],13:[2,112],15:[2,112],18:[2,112],34:[2,112],36:[2,112],67:[2,112],68:[2,112],71:[2,112],73:[2,112],84:[2,112],85:[2,112],87:[2,112],91:[2,112],92:[2,112],94:[2,112],95:[2,112]},{2:[2,113],6:[2,113],11:[2,113],13:[2,113],15:[2,113],18:[2,113],34:[2,113],36:[2,113],67:[2,113],68:[2,113],71:[2,113],73:[2,113],84:[2,113],85:[2,113],87:[2,113],91:[2,113],92:[2,113],94:[2,113],95:[2,113]},{2:[2,111],6:[2,111],11:[2,111],13:[2,111],15:[2,111],18:[2,111],34:[2,111],36:[2,111],67:[2,111],68:[2,111],71:[2,111],73:[2,111],84:[2,111],85:[2,111],87:[2,111],91:[2,111],92:[2,111],94:[2,111],95:[2,111]},{13:[2,65],65:[2,65],66:[2,65],70:[2,65],72:[2,65],75:[2,65],84:[2,65],85:[2,65],93:[2,65],95:[2,65],99:[2,65],102:[2,65],103:[2,65],110:[2,65]},{13:[2,95],65:[2,95],66:[2,95],70:[2,95],72:[2,95],75:[2,95],84:[2,95],85:[2,95],93:[2,95],95:[2,95],99:[2,95],102:[2,95],103:[2,95],110:[2,95]},{13:[2,96],65:[2,96],66:[2,96],70:[2,96],72:[2,96],75:[2,96],84:[2,96],85:[2,96],93:[2,96],95:[2,96],99:[2,96],102:[2,96],103:[2,96],110:[2,96]},{13:[2,103],65:[2,103],66:[2,103],70:[2,103],72:[2,103],75:[2,103],84:[2,103],85:[2,103],93:[2,103],95:[2,103],99:[2,103],102:[2,103],103:[2,103],110:[2,103]},{13:[2,104],65:[2,104],66:[2,104],70:[2,104],72:[2,104],75:[2,104],84:[2,104],85:[2,104],93:[2,104],95:[2,104],99:[2,104],102:[2,104],103:[2,104],110:[2,104]},{93:[1,75],95:[1,76]},{2:[2,106],6:[2,106],13:[2,106],18:[2,106],36:[2,106],65:[2,106],66:[2,106],70:[2,106],72:[2,106],75:[2,106],84:[2,106],85:[2,106],93:[2,106],95:[2,106],99:[2,106],102:[2,106],103:[2,106],110:[2,106]},{67:[1,77]},{2:[2,74],6:[2,74],11:[2,74],13:[2,74],15:[2,74],18:[2,74],34:[2,74],36:[2,74],67:[2,74],68:[2,74],73:[2,74],84:[2,74],85:[2,74],87:[2,74],91:[2,74],92:[2,74],93:[2,74],94:[2,74],95:[2,74],99:[2,74],102:[2,74],103:[2,74],110:[2,74]},{13:[1,60],29:56,39:58,47:29,71:[1,78],81:57,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],107:79,108:59,110:[1,25]},{13:[2,143],15:[2,143],23:[2,143],36:[2,143],71:[2,143],84:[2,143],85:[2,143],91:[2,143],94:[2,143],95:[2,143],99:[2,143],102:[2,143],103:[2,143],110:[2,143]},{13:[2,145],15:[2,145],23:[2,145],36:[2,145],71:[2,145],84:[2,145],85:[2,145],91:[2,145],94:[2,145],95:[2,145],99:[2,145],102:[2,145],103:[2,145],110:[2,145]},{13:[2,146],15:[2,146],23:[2,146],36:[2,146],71:[2,146],84:[2,146],85:[2,146],91:[2,146],94:[2,146],95:[2,146],99:[2,146],102:[2,146],103:[2,146],110:[2,146]},{13:[2,147],15:[2,147],23:[2,147],36:[2,147],71:[2,147],84:[2,147],85:[2,147],91:[2,147],94:[2,147],95:[2,147],99:[2,147],102:[2,147],103:[2,147],110:[2,147]},{13:[2,148],15:[2,148],23:[2,148],36:[2,148],71:[2,148],84:[2,148],85:[2,148],91:[2,148],94:[2,148],95:[2,148],99:[2,148],102:[2,148],103:[2,148],110:[2,148]},{13:[1,60],15:[1,66],29:56,32:80,36:[1,70],39:58,47:29,81:83,84:[1,27],85:[1,32],90:[1,69],94:[1,68],95:[1,26],97:24,98:28,99:[1,23],101:67,102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{73:[1,84]},{76:[1,85]},{2:[1,88],6:[1,86],13:[1,93],20:89,27:87,28:90,29:91,32:92,38:[1,94],39:58,41:[1,95],42:[1,96],47:29,81:83,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{15:[1,97],36:[1,98]},{15:[1,99]},{2:[2,119],6:[2,119],11:[2,119],13:[2,119],15:[2,119],18:[2,119],23:[2,119],34:[2,119],36:[2,119],67:[2,119],68:[2,119],71:[2,119],73:[2,119],84:[2,119],85:[2,119],87:[2,119],91:[2,119],92:[2,119],93:[2,119],94:[2,119],95:[2,119],99:[2,119],102:[2,119],103:[2,119],110:[2,119]},{15:[1,100],36:[1,101]},{15:[1,102]},{15:[1,103]},{15:[2,123],36:[2,123]},{2:[2,120],6:[2,120],11:[2,120],13:[2,120],15:[2,120],18:[2,120],23:[2,120],34:[2,120],36:[2,120],67:[2,120],68:[2,120],71:[2,120],73:[2,120],84:[2,120],85:[2,120],87:[2,120],91:[2,120],92:[2,120],93:[2,120],94:[2,120],95:[2,120],99:[2,120],102:[2,120],103:[2,120],110:[2,120]},{13:[1,39],35:104,43:43,49:36,53:40,84:[1,42],85:[1,44],95:[1,41],96:38,104:37,105:35},{2:[2,137],6:[2,137],11:[2,137],13:[2,137],15:[2,137],18:[2,137],34:[2,137],36:[2,137],67:[2,137],68:[2,137],71:[2,137],73:[2,137],84:[2,137],85:[2,137],87:[2,137],91:[2,137],92:[2,137],94:[2,137],95:[2,137]},{15:[1,105]},{91:[1,106]},{91:[1,107]},{5:108,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{5:109,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{13:[2,144],15:[2,144],23:[2,144],36:[2,144],71:[2,144],84:[2,144],85:[2,144],91:[2,144],94:[2,144],95:[2,144],99:[2,144],102:[2,144],103:[2,144],110:[2,144]},{15:[1,110],36:[1,111]},{15:[2,140],23:[2,140],36:[2,140],71:[2,140],91:[2,140],94:[2,140]},{15:[2,141],23:[2,141],36:[2,141],71:[2,141],91:[2,141],94:[2,141]},{13:[1,60],15:[2,146],23:[2,146],29:56,31:112,36:[2,146],39:58,47:29,71:[2,146],81:57,84:[1,27],85:[1,32],91:[2,146],94:[2,146],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],107:55,108:59,110:[1,25]},{4:[1,113]},{5:114,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{2:[2,14],6:[2,14],18:[2,14],76:[2,14]},{2:[1,116],6:[1,115],18:[1,117]},{6:[1,118]},{2:[2,19],6:[2,19],18:[2,19]},{2:[2,20],6:[2,20],18:[2,20]},{13:[1,60],23:[1,123],29:56,30:119,31:120,34:[1,121],36:[1,122],39:58,47:29,81:57,84:[1,27],85:[1,32],91:[2,145],94:[2,145],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],107:55,108:59,110:[1,25]},{33:124,91:[1,125],94:[1,51]},{13:[1,60],15:[1,66],29:56,32:126,36:[1,70],39:58,47:29,81:83,84:[1,27],85:[1,32],90:[1,69],94:[1,68],95:[1,26],97:24,98:28,99:[1,23],101:67,102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{39:127,110:[1,25]},{39:128,110:[1,25]},{39:129,110:[1,25]},{2:[2,88],6:[2,88],11:[2,88],13:[2,88],15:[2,88],18:[2,88],34:[2,88],36:[2,88],67:[2,88],68:[2,88],73:[2,88],84:[2,88],85:[2,88],87:[2,88],91:[2,88],92:[2,88],93:[2,88],94:[2,88],95:[2,88],99:[2,88],102:[2,88],103:[2,88],110:[2,88]},{5:131,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],83:130,84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{2:[2,128],6:[2,128],11:[2,128],13:[2,128],15:[2,128],18:[2,128],34:[2,128],36:[2,128],67:[2,128],68:[2,128],73:[2,128],84:[2,128],85:[2,128],87:[2,128],91:[2,128],92:[2,128],93:[2,128],94:[2,128],95:[2,128],99:[2,128],102:[2,128],103:[2,128],110:[2,128]},{2:[2,121],6:[2,121],11:[2,121],13:[2,121],15:[2,121],18:[2,121],23:[2,121],34:[2,121],36:[2,121],67:[2,121],68:[2,121],71:[2,121],73:[2,121],84:[2,121],85:[2,121],87:[2,121],91:[2,121],92:[2,121],93:[2,121],94:[2,121],95:[2,121],99:[2,121],102:[2,121],103:[2,121],110:[2,121]},{15:[2,124],36:[2,124]},{2:[2,126],6:[2,126],11:[2,126],13:[2,126],15:[2,126],18:[2,126],23:[2,126],34:[2,126],36:[2,126],67:[2,126],68:[2,126],71:[2,126],73:[2,126],84:[2,126],85:[2,126],87:[2,126],91:[2,126],92:[2,126],93:[2,126],94:[2,126],95:[2,126],99:[2,126],102:[2,126],103:[2,126],110:[2,126]},{2:[2,115],6:[2,115],11:[2,115],13:[2,115],15:[2,115],18:[2,115],23:[2,115],34:[2,115],36:[2,115],67:[2,115],68:[2,115],71:[2,115],73:[2,115],84:[2,115],85:[2,115],87:[2,115],91:[2,115],92:[2,115],93:[2,115],94:[2,115],95:[2,115],99:[2,115],102:[2,115],103:[2,115],110:[2,115]},{2:[2,136],6:[2,136],11:[2,136],15:[2,136],18:[2,136],34:[2,136],36:[2,136],67:[2,136],68:[2,136],73:[2,136],87:[2,136],91:[2,136],92:[2,136],94:[2,136]},{2:[2,134],6:[2,134],11:[2,134],13:[2,134],15:[2,134],18:[2,134],34:[2,134],36:[2,134],67:[2,134],68:[2,134],71:[2,134],73:[2,134],84:[2,134],85:[2,134],87:[2,134],91:[2,134],92:[2,134],94:[2,134],95:[2,134]},{13:[2,105],65:[2,105],66:[2,105],70:[2,105],72:[2,105],75:[2,105],84:[2,105],85:[2,105],93:[2,105],95:[2,105],99:[2,105],102:[2,105],103:[2,105],110:[2,105]},{2:[2,107],6:[2,107],13:[2,107],18:[2,107],36:[2,107],65:[2,107],66:[2,107],70:[2,107],72:[2,107],75:[2,107],84:[2,107],85:[2,107],93:[2,107],95:[2,107],99:[2,107],102:[2,107],103:[2,107],110:[2,107]},{68:[1,132]},{2:[2,70],6:[2,70],11:[2,70],15:[2,70],18:[2,70],34:[2,70],36:[2,70],67:[2,70],68:[2,70],73:[2,70],87:[2,70],91:[2,70],92:[2,70],94:[2,70]},{13:[2,149],15:[2,149],23:[2,149],36:[2,149],71:[2,149],84:[2,149],85:[2,149],91:[2,149],94:[2,149],95:[2,149],99:[2,149],102:[2,149],103:[2,149],110:[2,149]},{13:[1,60],29:56,32:134,39:58,47:29,81:83,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],106:81,107:82,108:59,109:133,110:[1,25]},{13:[1,60],15:[2,142],23:[2,142],29:56,36:[2,142],39:58,47:29,71:[2,142],81:57,84:[1,27],85:[1,32],91:[2,142],94:[2,142],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],107:79,108:59,110:[1,25]},{13:[1,60],29:56,32:137,39:58,47:29,74:135,78:136,81:83,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{2:[2,72],6:[2,72],11:[2,72],15:[2,72],18:[2,72],34:[2,72],36:[2,72],67:[2,72],68:[2,72],73:[2,72],87:[2,72],91:[2,72],92:[2,72],94:[2,72]},{2:[2,15],6:[2,15],18:[2,15],76:[2,15]},{6:[1,138]},{13:[1,93],20:139,28:90,29:91,32:92,38:[1,94],39:58,41:[1,95],42:[1,96],47:29,81:83,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{2:[2,16],6:[2,16],18:[2,16],76:[2,16]},{2:[2,21],6:[2,21],18:[2,21]},{13:[1,60],23:[1,123],29:56,30:140,39:58,47:29,81:57,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],107:79,108:59,110:[1,25]},{13:[1,39],35:141,43:43,49:36,53:40,84:[1,42],85:[1,44],95:[1,41],96:38,104:37,105:35},{13:[1,144],29:143,37:142,95:[1,26]},{5:145,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{13:[1,60],29:56,32:146,39:58,47:29,81:83,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{95:[1,76]},{15:[1,110],33:147,36:[1,111],91:[1,125],94:[1,51]},{33:150,40:148,88:149,89:151,90:[1,153],91:[1,152],94:[1,51]},{33:150,40:154,88:149,89:151,90:[1,153],91:[1,152],94:[1,51]},{33:150,40:155,88:149,89:151,90:[1,153],91:[1,152],94:[1,51]},{15:[1,156],36:[1,157]},{15:[2,92],36:[2,92]},{5:158,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{15:[1,159],36:[1,160]},{15:[2,152],36:[2,152]},{6:[1,161],18:[1,162]},{6:[2,78],18:[2,78]},{71:[1,163]},{2:[2,17],6:[2,17],18:[2,17],76:[2,17]},{2:[2,18],6:[2,18],18:[2,18]},{2:[2,22],6:[2,22],18:[2,22]},{2:[2,25],6:[2,25],18:[2,25]},{34:[1,164],36:[1,165]},{34:[2,76],36:[2,76]},{94:[1,68]},{2:[2,27],6:[2,27],11:[1,166],18:[2,27]},{23:[1,123],30:167},{13:[1,60],29:56,32:168,39:58,47:29,81:83,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{2:[2,29],6:[2,29],18:[2,29],36:[1,169]},{2:[2,98],6:[2,98],18:[2,98],36:[2,98]},{2:[2,99],6:[2,99],18:[2,99],36:[2,99]},{2:[2,100],6:[2,100],18:[2,100],36:[2,100]},{85:[1,170],95:[1,76]},{2:[2,101],6:[2,101],18:[2,101],36:[2,101]},{2:[2,30],6:[2,30],18:[2,30],36:[1,169]},{2:[2,31],6:[2,31],18:[2,31],36:[1,169]},{2:[2,90],6:[2,90],11:[2,90],13:[2,90],15:[2,90],18:[2,90],34:[2,90],36:[2,90],67:[2,90],68:[2,90],73:[2,90],84:[2,90],85:[2,90],87:[2,90],91:[2,90],92:[2,90],93:[2,90],94:[2,90],95:[2,90],99:[2,90],102:[2,90],103:[2,90],110:[2,90]},{5:171,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{2:[2,68],6:[2,68],11:[2,68],15:[2,68],18:[2,68],34:[2,68],36:[2,68],67:[2,68],68:[2,68],73:[2,68],87:[2,68],91:[2,68],92:[2,68],94:[2,68]},{13:[2,150],15:[2,150],23:[2,150],36:[2,150],71:[2,150],84:[2,150],85:[2,150],91:[2,150],94:[2,150],95:[2,150],99:[2,150],102:[2,150],103:[2,150],110:[2,150]},{13:[1,60],29:56,32:172,39:58,47:29,81:83,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{2:[2,71],6:[2,71],11:[2,71],15:[2,71],18:[2,71],34:[2,71],36:[2,71],67:[2,71],68:[2,71],73:[2,71],87:[2,71],91:[2,71],92:[2,71],94:[2,71]},{13:[1,60],29:56,32:137,39:58,47:29,78:173,81:83,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],106:81,107:82,108:59,110:[1,25]},{5:174,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:[2,67],85:[2,67],93:[2,67],95:[2,67],99:[2,67],102:[2,67],103:[2,67],110:[2,67]},{13:[1,39],35:175,43:43,49:36,53:40,84:[1,42],85:[1,44],95:[1,41],96:38,104:37,105:35},{13:[1,144],29:176,95:[1,26]},{4:[1,63],26:177},{2:[2,23],6:[2,23],18:[2,23]},{15:[1,178]},{33:150,88:179,89:151,90:[1,153],91:[1,152],94:[1,51]},{91:[1,180]},{15:[2,91],36:[2,91]},{15:[2,151],36:[2,151]},{6:[2,77],18:[2,77]},{6:[2,79],18:[2,79]},{2:[2,26],6:[2,26],18:[2,26]},{34:[2,75],36:[2,75]},{2:[2,28],6:[2,28],18:[2,28]},{13:[1,60],29:56,31:181,39:58,47:29,81:57,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],107:55,108:59,110:[1,25]},{2:[2,97],6:[2,97],18:[2,97],36:[2,97]},{2:[2,102],6:[2,102],18:[2,102],36:[2,102]},{13:[1,60],23:[1,123],29:56,30:182,39:58,47:29,81:57,84:[1,27],85:[1,32],95:[1,26],97:24,98:28,99:[1,23],102:[1,30],103:[1,31],107:79,108:59,110:[1,25]},{2:[2,24],6:[2,24],18:[2,24]}],
defaultActions: {33:[2,1]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    };

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+'\nExpecting '+expected.join(', ');
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }
            
            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column,
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};
return parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = JSHCparserExp;
exports.parse = function () { return JSHCparserExp.parse.apply(JSHCparserExp, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    if (typeof process !== 'undefined') {
        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), "utf8");
    } else {
        var cwd = require("file").path(require("file").cwd());
        var source = cwd.join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}